===============
系统处理类
===============


+-------------+-----------+
|属性         |值         |
+=============+===========+
|命名空间     |fize\\misc |
+-------------+-----------+
|类名         |System     |
+-------------+-----------+


:方法:


+-----------------------------+--------------------------------------------------------+
|方法名                       |说明                                                    |
+=============================+========================================================+
|`debugBacktrace()`_          |产生一条回溯跟踪(backtrace)                             |
+-----------------------------+--------------------------------------------------------+
|`debugPrintBacktrace()`_     |打印一条回溯。                                          |
+-----------------------------+--------------------------------------------------------+
|`debugZvalDump()`_           |将一个字符串表示一个内部Zend值输出                      |
+-----------------------------+--------------------------------------------------------+
|`errorClearLast()`_          |清除最近的错误                                          |
+-----------------------------+--------------------------------------------------------+
|`errorGetLast()`_            |获取最后发生的错误                                      |
+-----------------------------+--------------------------------------------------------+
|`errorLog()`_                |发送错误信息到某个地方                                  |
+-----------------------------+--------------------------------------------------------+
|`errorReporting()`_          |设置应该报告何种 PHP 错误                               |
+-----------------------------+--------------------------------------------------------+
|`restoreErrorHandler()`_     |还原之前的错误处理函数                                  |
+-----------------------------+--------------------------------------------------------+
|`restoreExceptionHandler()`_ |恢复之前定义过的异常处理函数                            |
+-----------------------------+--------------------------------------------------------+
|`setErrorHandler()`_         |设置一个用户定义的错误处理函数                          |
+-----------------------------+--------------------------------------------------------+
|`set_exception_handler()`_   |设置一个用户定义的异常处理函数。                        |
+-----------------------------+--------------------------------------------------------+
|`triggerError()`_            |产生一个用户级别的 error/warning/notice 信息            |
+-----------------------------+--------------------------------------------------------+
|`userError()`_               |产生一个用户级别的 error/warning/notice 信息            |
+-----------------------------+--------------------------------------------------------+


方法
======
debugBacktrace()
----------------
产生一条回溯跟踪(backtrace)

.. code-block:: php

  public static function debugBacktrace (
      int $options = 0,
      int $limit = 0
  ) : array


:参数:
  +--------+-------------------------------+
  |名称    |说明                           |
  +========+===============================+
  |options |选项                           |
  +--------+-------------------------------+
  |limit   |限制返回堆栈帧的数量           |
  +--------+-------------------------------+
  
  


::

    参数 `$options` :
      DEBUG_BACKTRACE_PROVIDE_OBJECT:是否填充 "object" 的索引;
      DEBUG_BACKTRACE_IGNORE_ARGS:是否忽略 "args" 的索引;
    参数 `$limit` :
      这个参数能够用于限制返回堆栈帧的数量。 默认为 (limit=0) ，返回所有的堆栈帧。


debugPrintBacktrace()
---------------------
打印一条回溯。

.. code-block:: php

  public static function debugPrintBacktrace (
      int $options = 0,
      int $limit = 0
  )


:参数:
  +--------+-------------------------------+
  |名称    |说明                           |
  +========+===============================+
  |options |选项                           |
  +--------+-------------------------------+
  |limit   |限制返回堆栈帧的数量           |
  +--------+-------------------------------+
  
  


::

    参数 `$options` :
      DEBUG_BACKTRACE_IGNORE_ARGS 是否忽略 "args" 的索引
    参数 `$limit` :
      这个参数能够用于限制返回堆栈帧的数量。 默认为 (limit=0) ，返回所有的堆栈帧。


debugZvalDump()
---------------
将一个字符串表示一个内部Zend值输出

.. code-block:: php

  public static function debugZvalDump (
      mixed $variable
  )


:参数:
  +---------+-------+
  |名称     |说明   |
  +=========+=======+
  |variable |值     |
  +---------+-------+
  
  


errorClearLast()
----------------
清除最近的错误

.. code-block:: php

  public static function errorClearLast ()



errorGetLast()
--------------
获取最后发生的错误

.. code-block:: php

  public static function errorGetLast () : array



errorLog()
----------
发送错误信息到某个地方

.. code-block:: php

  public static function errorLog (
      string $message,
      int $message_type = null,
      string $destination = null,
      string $extra_headers = null
  ) : bool


:参数:
  +--------------+------------------------------------------------------------+
  |名称          |说明                                                        |
  +==============+============================================================+
  |message       |应该被记录的错误信息。                                      |
  +--------------+------------------------------------------------------------+
  |message_type  |设置错误应该发送到何处0-4                                   |
  +--------------+------------------------------------------------------------+
  |destination   |目标                                                        |
  +--------------+------------------------------------------------------------+
  |extra_headers |额外的头。当 message_type 设置为 1 的时候使用               |
  +--------------+------------------------------------------------------------+
  
  


::

    参数 `$destination` :
    它的含义描述于以上，由 message_type 参数所决定。


errorReporting()
----------------
设置应该报告何种 PHP 错误

.. code-block:: php

  public static function errorReporting (
      int $level = null
  ) : int


:参数:
  +-------+------------------------------+
  |名称   |说明                          |
  +=======+==============================+
  |level  |新的 error_reporting 级别     |
  +-------+------------------------------+
  
  

:返回值:
  返回旧的 error_reporting 级别，或者在 level 参数未给出时返回当前的级别。


restoreErrorHandler()
---------------------
还原之前的错误处理函数

.. code-block:: php

  public static function restoreErrorHandler () : bool



restoreExceptionHandler()
-------------------------
恢复之前定义过的异常处理函数

.. code-block:: php

  public static function restoreExceptionHandler () : bool



setErrorHandler()
-----------------
设置一个用户定义的错误处理函数

.. code-block:: php

  public static function setErrorHandler (
      callable $error_handler,
      int $error_types = 30719
  ) : mixed


:参数:
  +--------------+-------------------+
  |名称          |说明               |
  +==============+===================+
  |error_handler |用户的函数         |
  +--------------+-------------------+
  |error_types   |指定错误类型       |
  +--------------+-------------------+
  
  


set_exception_handler()
-----------------------
设置一个用户定义的异常处理函数。

.. code-block:: php

  public static function set_exception_handler (
      callable $exception_handler
  ) : mixed


:参数:
  +------------------+----------------+
  |名称              |说明            |
  +==================+================+
  |exception_handler |用户的函数      |
  +------------------+----------------+
  
  


triggerError()
--------------
产生一个用户级别的 error/warning/notice 信息

.. code-block:: php

  public static function triggerError (
      string $error_msg,
      int $error_type = 1024
  ) : bool


:参数:
  +-----------+-----------------------------------+
  |名称       |说明                               |
  +===========+===================================+
  |error_msg  |该 error 的特定错误信息            |
  +-----------+-----------------------------------+
  |error_type |该 error 所特定的错误类型          |
  +-----------+-----------------------------------+
  
  


userError()
-----------
产生一个用户级别的 error/warning/notice 信息

.. code-block:: php

  public static function userError (
      string $error_msg,
      int $error_type = 1024
  ) : bool


:参数:
  +-----------+-----------------------------------+
  |名称       |说明                               |
  +===========+===================================+
  |error_msg  |该 error 的特定错误信息            |
  +-----------+-----------------------------------+
  |error_type |该 error 所特定的错误类型          |
  +-----------+-----------------------------------+
  
  


::

    是 triggerError() 方法的别名


